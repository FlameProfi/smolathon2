{"ast":null,"code":"import axios from 'axios';\nexport const API_URL = `http://localhost:5027/`;\nconst $api = axios.create({\n  withCredentials: true,\n  baseURL: API_URL\n});\n$api.interceptors.request.use(config => {\n  config.headers.Authorization = `Bearer ${localStorage.getItem('token')}`;\n  return config;\n});\n$api.interceptors.response.use(config => {\n  return config;\n}, async error => {\n  const originalRequest = error.config;\n\n  if (error.response.status == 401 && error.config && !error.config._isRetry) {\n    originalRequest._isRetry = true;\n\n    try {\n      const response = await axios.get(`${API_URL}/accounts/refresh-token`, {\n        withCredentials: true\n      });\n      localStorage.setItem('token', response.data.token);\n      return $api.request(originalRequest);\n    } catch (e) {\n      console.log('НЕ АВТОРИЗОВАН');\n    }\n  }\n\n  throw error;\n});\nexport default $api;","map":{"version":3,"sources":["/Users/admin/Desktop/smolathon2/client/src/http/index.ts"],"names":["axios","API_URL","$api","create","withCredentials","baseURL","interceptors","request","use","config","headers","Authorization","localStorage","getItem","response","error","originalRequest","status","_isRetry","get","setItem","data","token","e","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAKA,OAAO,MAAMC,OAAO,GAAI,wBAAjB;AAEP,MAAMC,IAAI,GAAGF,KAAK,CAACG,MAAN,CAAa;AACtBC,EAAAA,eAAe,EAAE,IADK;AAEtBC,EAAAA,OAAO,EAAEJ;AAFa,CAAb,CAAb;AAKAC,IAAI,CAACI,YAAL,CAAkBC,OAAlB,CAA0BC,GAA1B,CAA+BC,MAAD,IAAY;AACtCA,EAAAA,MAAM,CAACC,OAAP,CAAeC,aAAf,GAAgC,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B,EAAvE;AACA,SAAOJ,MAAP;AACH,CAHD;AAKAP,IAAI,CAACI,YAAL,CAAkBQ,QAAlB,CAA2BN,GAA3B,CAAgCC,MAAD,IAAY;AACvC,SAAOA,MAAP;AACH,CAFD,EAEE,MAAOM,KAAP,IAAiB;AACf,QAAMC,eAAe,GAAGD,KAAK,CAACN,MAA9B;;AACA,MAAIM,KAAK,CAACD,QAAN,CAAeG,MAAf,IAAyB,GAAzB,IAAgCF,KAAK,CAACN,MAAtC,IAAgD,CAACM,KAAK,CAACN,MAAN,CAAaS,QAAlE,EAA4E;AACxEF,IAAAA,eAAe,CAACE,QAAhB,GAA2B,IAA3B;;AACA,QAAI;AACA,YAAMJ,QAAQ,GAAG,MAAMd,KAAK,CAACmB,GAAN,CAAyB,GAAElB,OAAQ,yBAAnC,EAA6D;AAACG,QAAAA,eAAe,EAAE;AAAlB,OAA7D,CAAvB;AACAQ,MAAAA,YAAY,CAACQ,OAAb,CAAqB,OAArB,EAA8BN,QAAQ,CAACO,IAAT,CAAcC,KAA5C;AACA,aAAOpB,IAAI,CAACK,OAAL,CAAaS,eAAb,CAAP;AACH,KAJD,CAIE,OAAOO,CAAP,EAAU;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH;AACJ;;AACD,QAAMV,KAAN;AACH,CAfD;AAiBA,eAAeb,IAAf","sourcesContent":["import axios from 'axios';\nimport {AuthResponse} from \"../models/response/AuthResponse\";\nimport {store} from \"../index\";\nimport {IUser} from \"../models/IUser\";\n\nexport const API_URL = `http://localhost:5027/`\n\nconst $api = axios.create({\n    withCredentials: true,\n    baseURL: API_URL\n})\n\n$api.interceptors.request.use((config) => {\n    config.headers.Authorization = `Bearer ${localStorage.getItem('token')}`\n    return config;\n})\n\n$api.interceptors.response.use((config) => {\n    return config;\n},async (error) => {\n    const originalRequest = error.config;\n    if (error.response.status == 401 && error.config && !error.config._isRetry) {\n        originalRequest._isRetry = true;\n        try {\n            const response = await axios.get<AuthResponse>(`${API_URL}/accounts/refresh-token`, {withCredentials: true})\n            localStorage.setItem('token', response.data.token);\n            return $api.request(originalRequest);\n        } catch (e) {\n            console.log('НЕ АВТОРИЗОВАН')\n        }\n    }\n    throw error;\n})\n\nexport default $api;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/client/src/Pages/Login/Login.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport './assets/style.scss';\nimport React from \"react\";\nimport { Context } from \"../../index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  // state variables for email and passwords\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\"); // state variable for error messages\n\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const {\n    store\n  } = useContext(Context); // handle change events for input fields\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === \"email\") setEmail(value);\n    if (name === \"password\") setPassword(value);\n  };\n\n  const handleRegisterClick = () => {\n    navigate(\"/register\");\n  }; // handle submit event for the form\n\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // validate email and passwords\n\n    if (!email || !password) {\n      setError(\"Please fill in all fields.\");\n    } else {\n      setError(\"\");\n      var status = store.login(email, password);\n      status.then(data => {\n        if ((data === null || data === void 0 ? void 0 : data.status) == 200) {\n          console.log(\"ВОШЛО УСПЕШНО\");\n          navigate(\"/events\");\n        } else setError(\"Error registering.\");\n      }).catch(error => {\n        console.error(error);\n        setError(\"Error registering.\");\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth_page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"ArtConnect Smolensk\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth_box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0410\\u0412\\u0422\\u041E\\u0420\\u0418\\u0417\\u0410\\u0426\\u0418\\u042F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box_input\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input_item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"E-mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              name: \"email\",\n              value: email,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input_item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              name: \"password\",\n              value: password,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box_buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"buttons_login\",\n            type: \"submit\",\n            children: \"\\u0412\\u041E\\u0419\\u0422\\u0418\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"buttons_reg\",\n            onClick: handleRegisterClick,\n            children: \"\\u0420\\u0415\\u0413\\u0418\\u0421\\u0422\\u0420\\u0410\\u0426\\u0418\\u042F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"lneL8zoyCkBGQeoQ0SRcaTPwDGg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/admin/Desktop/client/src/Pages/Login/Login.tsx"],"names":["useState","useContext","useNavigate","React","Context","Login","email","setEmail","password","setPassword","error","setError","navigate","store","handleChange","e","name","value","target","handleRegisterClick","handleSubmit","preventDefault","status","login","then","data","console","log","catch"],"mappings":"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","sourcesContent":["import { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport './assets/style.scss'\nimport React from \"react\";\nimport {Context} from \"../../index\";\n\nfunction Login() {\n    // state variables for email and passwords\n    const [email, setEmail] = useState<string>(\"\");\n    const [password, setPassword] = useState<string>(\"\");\n    // state variable for error messages\n    const [error, setError] = useState<string>(\"\");\n    const navigate = useNavigate();\n    const {store} = useContext(Context);\n\n    // handle change events for input fields\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = e.target;\n        if (name === \"email\") setEmail(value);\n        if (name === \"password\") setPassword(value);\n    };\n\n    const handleRegisterClick = () => {\n        navigate(\"/register\");\n    }\n\n    // handle submit event for the form\n    const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        // validate email and passwords\n        if (!email || !password) {\n            setError(\"Please fill in all fields.\");\n        } else {\n            setError(\"\");\n\n            var status = store.login(email, password);\n            status.then((data) => {\n                if (data?.status == 200){ \n                    console.log(\"ВОШЛО УСПЕШНО\")\n                    navigate(\"/events\")\n                }\n                else\n                    setError(\"Error registering.\");\n\n            })\n            .catch((error) => {\n                console.error(error);\n                setError(\"Error registering.\");\n            });\n            \n        }\n    };\n\n    return (\n        <div className=\"auth_page\">\n            <h3>ArtConnect Smolensk</h3>\n            <div className=\"auth_box\"> \n                <h1>АВТОРИЗАЦИЯ</h1>\n                <form onSubmit={handleSubmit}>\n                <div className=\"box_input\">\n                    <div className=\"input_item\">\n                    <p>E-mail</p>\n                    <input type=\"email\"\n                        id=\"email\"\n                        name=\"email\"\n                        value={email}\n                        onChange={handleChange} />\n                    </div>\n                    <div className=\"input_item\">\n                    <p>Пароль</p>\n                    <input type=\"password\"\n                        id=\"password\"\n                        name=\"password\"\n                        value={password}\n                        onChange={handleChange} />\n                    </div>\n\n                </div>\n                    {/* TO DO CAPTHA */}\n                    <div className=\"box_buttons\">\n                        <button className=\"buttons_login\" type=\"submit\">ВОЙТИ</button>\n                        <button className=\"buttons_reg\" onClick={handleRegisterClick}>РЕГИСТРАЦИЯ</button>\n                    </div>\n                    </form>\n            </div>\n            {error && <p className=\"error\">{error}</p>}\n        </div>\n    );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}